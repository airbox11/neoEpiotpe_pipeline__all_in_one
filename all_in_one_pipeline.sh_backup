set -e  
umask 007

module load perl/5.24.1
module load R/3.4.0
module load python/2.7.9
module load samtools/1.5



## prepare data_manually ====
# hla fastq
# snv vcf, [bam, tsv, TCGA]
# indel vcf



## input parameters:
export runID=$1
export sampleID=$2
export patientID=$3
export RNAseq=$4
export tcga=$5
export mhcIversion=$6
export steps=$7



##
export scriptsDir=/icgc/dkfzlsdf/analysis/D120/yanhong/all_in_one_pipeline



if [[ $mhcIversion = 4.1 ]]; then
    export workDir=/icgc/dkfzlsdf/analysis/D120/yanhong/all_in_one_pipeline_collection/mhc4.1/${runID}
elif [[ $mhcIversion = 4.0 ]]; then
    export workDir=/icgc/dkfzlsdf/analysis/D120/yanhong/all_in_one_pipeline_collection/${runID}
fi



function prepare_folder () {
    echo test now
    echo $workDir
    rm -rf $workDir
    mkdir -p $workDir
    cd $workDir


    ## clear and creat folder for each s

    rm -rf 1.1_hla_typing
    mkdir -p 1.1_hla_typing
    rm -rf 1.2_format_hla_result 
    mkdir -p 1.2_format_hla_result
    rm -rf 2_SNVs_based_neoepitope_prediction 
    mkdir -p 2_SNVs_based_neoepitope_prediction
    rm -rf 3.1_add_tcga_rna 
    mkdir -p 3.1_add_tcga_rna
    rm -rf 3.2_add_local_rna 
    mkdir -p 3.2_add_local_rna
    rm -rf 4_indel_based_prediction 
    mkdir -p 4_indel_based_prediction
    rm -rf 6_visualization_neoepitope_prediction 
    mkdir -p 6_visualization_neoepitope_prediction
    rm -rf 7_neopeptide_prediction 
    mkdir -p 7_neopeptide_prediction
    rm -rf 8_chose_neoepitode 
    mkdir -p 8_chose_neoepitode
    rm -rf 9_Fusion_gene_based_neoepitope_identification 
    mkdir -p 9_Fusion_gene_based_neoepitope_identification
    rm -rf 10_convert_file_to_HTML_format 
    mkdir -p 10_convert_file_to_HTML_format

}


function s1a_HLA () {
    ## old version ==
    # ${scriptsDir}/1.1_HLA_typing_submit_with_PID.sh $sampleID $workDir

    ## new version ===
    # HLA_script=/icgc/dkfzlsdf/analysis/D120/scripts/HLA_typing/run_hla_typing.sh
    # sh $HLA_script -i ${runID} -1 $fq1 -2 $fq2 -o ${workDir}/1.1_hla_typing
    script=/icgc/dkfzlsdf/analysis/D120/scripts/HLA_typing/run_phlat.sh
    OUTPUT_DIR=${workDir}/1.1_hla_typing/phlat3
    threads=8

    bsub -r -n 10 -J phlat_${runID} -o ${OUTPUT_DIR}/run_phlat.log  -W 50:00 -R "rusage[mem=200G]" -env "all, OUTPUT_DIR=${OUTPUT_DIR}, runID=$runID" $script
}

function s1b_HLA () {
    ## 1.2) HLA typing format 
    ${scriptsDir}/1.2_HLA_format.sh $sampleID $workDir
}

## 4) Indel based prediction (not submission)
# ${scriptsDir}/4_indel_based_prediction.sh $patientID $workDir &


##########
## 2) neoepitode predition with snv calling result (submission)

function s2_snv () {
    if [ $? == 1 ]; then
        exit 1
    fi
    ## after a few seconds: (15mins):
    ## check results_S2914Nr4_MHCI_epitopes_filtered.tab exist or not. If yes, continue for next s, otherwise wait for 5 min check again.

    file=${workDir}/2_SNVs_based_neoepitope_prediction/result/log_summary
    if [ ! -e $file ]; then
        ${scriptsDir}/2_snv_based_prediction.sh $sampleID $patientID $workDir $mhcIversion
    fi

    while [ ! -f ${file} ]
    do
      echo '--> snv-based neoepitode predition: processing...'
      sleep 30 # or less like 0.2
    done

    cp -u ${workDir}/2_SNVs_based_neoepitope_prediction/result/results_*MHC*tab ${workDir}/2_SNVs_based_neoepitope_prediction
    echo '--> snv-based neoepitode predition: completed'
}

function s3_rna () {
    ##########
    ## 3) If RNA-seq exist, excute 3.2, otherwise excute 3.1 (time: )
    if [[ $RNAseq = No ]]
    then
        ## 3.1) add tcga data (R script, load R, not submission)
        ${scriptsDir}/3.1_add_TCGA_data.sh $sampleID $workDir $tcga
    elif [[ $RNAseq = Yes ]]
    then
        ## 3.2) add RNA-seq data 
        ${scriptsDir}/3.2_add_rna.sh $sampleID $patientID $workDir
    fi

}


##########
## *5)  Check expression for Indels-based neoepitopes : check manually
## *(optional) 6) 6_visualization_neoepitope_prediction
## *7) 7_neopeptide_prediction (working if without HLA typing)

##########

function s8a_filter () {
    ## 8) chose neoepitode:
    # if [[ $RNAseq = No ]]
    # then
    #     ## 3.1) filter tcga data (R script, load R, not submission)
    #     ${scriptsDir}/8_chose_neoepitode_tcga.sh $sampleID $workDir $tcga
    # elif [[ $RNAseq = Yes ]]
    # then
    #     ## 3.2) filter RNA-seq data 
    #     ${scriptsDir}/8_chose_neoepitode_RNAseq.sh $sampleID $workDir $tcga
    # fi

    Rscript $scriptsDir/8_chose_neoepitode_filter3_Yanhong.r $sampleID $patientID $workDir $tcga $RNAseq
}




function s8b_xlsx_to_public (){
    echo $runID
    echo $patientID
    echo good
    Rscript ${scriptsDir}/convert_to_xlsx.r $runID ${patientID} snv
}


function s4a_indel_predict () {

    if [ ! -e ${workDir}/4_indel_based_prediction/*vcf ];then
        vcf1=/icgc/dkfzlsdf/project/OE0422/immuno_patients_nct/sequencing/exon_sequencing/view-by-pid/IPNCT_${patientID}/indel_results/paired/tumor*/results_*/*somatic_functional_indels_conf_8_to_10.vcf
        vcf2=${workDir}/4_indel_based_prediction/IPNCT_${patientID}_somatic_functional_indels_conf_8_to_10.vcf
        ln -sf $vcf1 $vcf2


    fi
    if [ ! -e ${workDir}/4_indel_based_prediction/*vcf ]; then
        echo "indel vcf file not exist!! >>>>> "
        exit 1
    fi
    script=/icgc/dkfzlsdf/analysis/D120/scripts/neoepitope_indels/main_indels.sh
    # vcf=$workDir/4_indel_based_prediction/*vcf
    hla=$workDir/1.2_format_hla_result/format_hla_phlat
    outputDir=$workDir/4_indel_based_prediction/result
    mkdir -p $outputDir
    
    sh $script -f ${workDir}/4_indel_based_prediction/*vcf -l 21 -a $hla -o $outputDir
}


function s4b_indel_tsv () {
    script=/icgc/dkfzlsdf/analysis/D120/yanhong/all_in_one_pipeline/4b_indel_table.r
    Rscript $script $runID

}


function s4c_xlsx_to_public  () {
    Rscript ${scriptsDir}/convert_to_xlsx.r $runID ${patientID} indel

}





export -f prepare_folder
export -f s1a_HLA
export -f s1b_HLA
export -f s2_snv
export -f s3_rna
export -f s8a_filter
export -f s8b_xlsx_to_public
export -f s4a_indel_predict
export -f s4b_indel_tsv
export -f s4c_xlsx_to_public


function bsub_lv {
    PID=$runID
    outputReport=/icgc/dkfzlsdf/analysis/D120/yanhong/all_in_one_pipeline_collection/mhc4.1/${runID}.log
    threads=1
    rm -f $outputReport
    bsub \
        -u y.lyu@dkfz-heidelberg.de -r -R "rusage[mem=10G]" -J ${PID} -W 50:00  -n $threads \
        "$@"
        # -N
        # -o ${outputReport} \

}


if echo $steps | grep -o s0; then
    bsub_lv prepare_folder
fi

if echo $steps | grep -o s1a; then
    bsub_lv s1a_HLA
fi

if echo $steps | grep -o s1b; then
    bsub_lv s1b_HLA
fi

if echo $steps | grep -o s2; then
    bsub_lv s2_snv
fi

if echo $steps | grep -o s3; then
    bsub_lv s3_rna
fi

if echo $steps | grep -o s8a; then
    bsub_lv s8a_filter
fi


if echo $steps | grep -o s8b; then
    bsub_lv s8b_xlsx_to_public
fi

if echo $steps | grep -o s4a; then
    bsub_lv s4a_indel_predict
fi

if echo $steps | grep -o s4b; then
    bsub_lv s4b_indel_tsv
fi

if echo $steps | grep -o s4c; then
    bsub_lv s4c_xlsx_to_public
fi